# after "docker-compose up -d", run this command to create kafka topics:
# docker-compose exec kafka kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic agent_config

version: "3.9"
services:


  # enter repl in docker: mysql -uroot  -p
  mysql:
    image: "mysql:8.0-oracle"
    # restart: always # restart with docker engine
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "tuo-mysql"
      MYSQL_DATABASE: "tuo" # create database on image startup, otherwise pymysql cannot connect to it
#TZ: "Asia/Shanghai" # set time zone
    # volumes:
    #   - "./_data/mysql/:/var/lib/mysql/:rw"
    #   - "./_log/mysql/:/var/log/mysql/:rw"
    #   - "./conf/mysql/:/etc/mysql/conf.d/:ro"do
    command: --default-authentication-plugin=mysql_native_password

  # redis:
  #   image: "redis:6.2.6-alpine"
  #   # restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - "./_data/redis/:/data:rw"
  #     - "./conf/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro"
  #   command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]  # specify conf
  #   environment:
  #     TZ: "Asia/Shanghai" # set time zone

  influxdb:
    image: "influxdb:2.1.1" # influx cli cannot enter interactive shell after influxdb2.x
    # restart: always
    ports:
      - "8086:8086"
    #volumes:
      #- "./_data/influxdb/:/var/lib/influxdb2:rw"
      #- "./conf/influxdb/config.yml:/etc/influxdb2/config.yml:ro"
    environment:
      TZ: "Asia/Shanghai" # set time zone
      DOCKER_INFLUXDB_INIT_MODE: "setup" # automated setup
      DOCKER_INFLUXDB_INIT_USERNAME: "init-user"
      DOCKER_INFLUXDB_INIT_PASSWORD: "init-pass"
      DOCKER_INFLUXDB_INIT_ORG: "influxdata"
      DOCKER_INFLUXDB_INIT_BUCKET: "default"
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "8hEh2d7Tg0WDWCFyN0WtCYl87f4HGANE"
    networks:
      - influxdb

  # telegraf:
  #   image: "telegraf"
  #   volumes:
  #     - "./telegraf.conf:/etc/telegraf/telegraf.conf:ro"
  #   networks:
  #     - influxdb


  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  influxdb:

#  grafana:
#    build: 
#      context: ./
#      dockerfile: Dockerfile.grafana
#    image: "zockerhub/grafana-oss:8.3.4"
#    ports:
#      - "3000:3000"
#    volumes:
#      - "./_data/grafana/:/var/lib/grafana:rw"
#      - "./log/grafana/:/var/log/grafana/:rw"
#    user: "472:0"

